{
  "openapi": "3.0.1",
  "info": {
    "title": "InsightAI Fraud Detection API",
    "description": "APIs for fraud detection, prevention, bulk processing, and initial customer data load.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.insightai.in/"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/fraud-detection": {
      "post": {
        "description": "Analyzes transaction data for potential fraud and returns a detailed fraud report.",
        "requestBody": {
          "description": "Transaction details to analyze for fraud.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Fraud detection response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FraudDetectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fraud-detection/bulk": {
      "post": {
        "description": "Uploads a bulk set of transactions for fraud analysis.",
        "requestBody": {
          "description": "A file containing multiple transactions in CSV or JSON format.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkUploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Bulk fraud detection response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDetectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid bulk upload request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fraud-detection/{id}": {
      "get": {
        "description": "Retrieves the fraud detection report for a specific transaction ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Transaction ID for which the fraud detection report is requested.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fraud detection report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FraudDetectionReport"
                }
              }
            }
          },
          "404": {
            "description": "Transaction ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fraud-detection/customers/load": {
      "post": {
        "description": "Loads first-time customer data into the system for fraud prevention and risk profiling.",
        "requestBody": {
          "description": "Customer data file in CSV or JSON format containing necessary details for onboarding.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CustomerDataLoadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Customer data successfully loaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDataLoadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid customer data or file format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TransactionData": {
        "type": "object",
        "required": ["transactionId", "amount", "timestamp", "accountDetails"],
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Unique identifier for the transaction."
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Transaction amount."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the transaction."
          },
          "accountDetails": {
            "type": "object",
            "properties": {
              "accountId": {
                "type": "string",
                "description": "ID of the account associated with the transaction."
              },
              "accountType": {
                "type": "string",
                "description": "Type of the account (e.g., savings, current)."
              }
            }
          }
        }
      },
      "FraudDetectionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the fraud detection process."
          },
          "isFraudulent": {
            "type": "boolean",
            "description": "Indicates whether the transaction is flagged as fraudulent."
          },
          "details": {
            "type": "string",
            "description": "Detailed explanation of the fraud detection result."
          }
        }
      },
      "BulkUploadRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "CSV or JSON file containing multiple transactions."
          }
        }
      },
      "BulkDetectionResponse": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "string",
            "description": "String Id to represent the case analysis of the bulk transaction"
          },
          "processedCount": {
            "type": "integer",
            "description": "Number of transactions successfully processed."
          },
          "fraudulentCount": {
            "type": "integer",
            "description": "Number of transactions flagged as fraudulent."
          },
          "analyticsJson": {
            "type": "object",
            "description": "JSON of all the transaction flagged and score for each"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FraudDetectionResponse"
            }
          }
        }
      },
      "FraudDetectionReport": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "ID of the transaction."
          },
          "isFraudulent": {
            "type": "boolean",
            "description": "Indicates if the transaction is fraudulent."
          },
          "riskScore": {
            "type": "number",
            "description": "Risk score associated with the transaction."
          },
          "explanation": {
            "type": "string",
            "description": "Detailed explanation of the fraud analysis."
          }
        }
      },
      "CustomerDataLoadRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "CSV or JSON file containing customer details."
          }
        }
      },
      "CustomerDataLoadResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the data load process."
          },
          "loadedCount": {
            "type": "integer",
            "description": "Number of customer records successfully loaded."
          },
          "failedCount": {
            "type": "integer",
            "description": "Number of records that failed to load."
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": "Details of any errors encountered."
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code."
          },
          "message": {
            "type": "string",
            "description": "Error message describing the issue."
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
